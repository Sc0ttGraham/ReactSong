
@{
    ViewBag.Title = "CreateGraph";
}

<!DOCTYPE html>
<html>
<head>
    <style>
        .timer {
            border-radius: 25px;
            padding: 5px;
            color: #ff0066;
            font-size: 18px;
            /*background-color: #660029;*/
            opacity: 0.8;
            -webkit-transition: opacity 0.5s ease-out;
            -moz-transition: opacity 0.5s ease-out;
            -ms-transition: opacity 0.5s ease-out;
            -o-transition: opacity 0.5s ease-out;
            transition: opacity 0.5s ease-out;
        }
            .timer:hover {
                opacity: 1;
            }

        .videoTitle{
            color: #8c8c8c;
        }

        .plusMinus{
            color: #ff0066;
            font-size: 15px;
        }

        .button{
            border-radius: 25px;
            padding: 5px;
            /*color: #ff0066;*/
            font-size: 18px;
            background-color: #ff0066;
            opacity: 0.8;
            -webkit-transition: opacity 0.5s ease-out;
            -moz-transition: opacity 0.5s ease-out;
            -ms-transition: opacity 0.5s ease-out;
            -o-transition: opacity 0.5s ease-out;
            transition: opacity 0.5s ease-out;
        }
        .button:hover {
                opacity: 1;
            }

        body {
            padding: 30px;
        }

        input[type=range] {
            /*removes default webkit styles*/
            -webkit-appearance: none;
            /*fix for FF unable to apply focus style bug */
            border: #666666;
            /*required for proper track sizing in FF*/
            width: 300px;
        }

            input[type=range]::-webkit-slider-runnable-track {
                width: 300px;
                height: 5px;
                background: #666666;
                border: none;
                border-radius: 3px;
            }

            input[type=range]::-webkit-slider-thumb {
                -webkit-appearance: none;
                border: none;
                height: 16px;
                width: 16px;
                border-radius: 50%;
                background: #ff0066;
                margin-top: -4px;
            }

            input[type=range]:focus {
                outline: none;
            }

                input[type=range]:focus::-webkit-slider-runnable-track {
                    background: #666666;
                }

            input[type=range]::-moz-range-track {
                width: 300px;
                height: 5px;
                background: #666666;
                border: none;
                border-radius: 3px;
            }

            input[type=range]::-moz-range-thumb {
                border: none;
                height: 16px;
                width: 16px;
                border-radius: 50%;
                background: #ff0066;
            }

            /*hide the outline behind the border*/
            input[type=range]:-moz-focusring {
                outline: #666666;
                outline-offset: -1px;
            }

            input[type=range]::-ms-track {
                width: 300px;
                height: 5px;
                /*remove bg colour from the track, we'll use ms-fill-lower and ms-fill-upper instead */
                background: transparent;
                /*leave room for the larger thumb to overflow with a transparent border */
                border-color: transparent;
                border-width: 6px 0;
                /*remove default tick marks*/
                color: transparent;
            }

            input[type=range]::-ms-fill-lower {
                background: #666666;
                border-radius: 10px;
            }

            input[type=range]::-ms-fill-upper {
                background: #666666;
                border-radius: 10px;
            }

            input[type=range]::-ms-thumb {
                border: none;
                height: 16px;
                width: 16px;
                border-radius: 50%;
                background: #ff0066;
            }

            input[type=range]:focus::-ms-fill-lower {
                background: #666666;
            }

            input[type=range]:focus::-ms-fill-upper {
                background: #666666;
            }
    </style>
</head>
<body>
    <div>
        <div hidden>
            <input id="userURL" type="text" value=@Model.URL>
            <br>
        </div>

        <div id="player"></div>

        <h3 style="text-align:center"><text class="timer"><text id="videoTime">0:00</text>/<text id="totalTime">0:00</text></text>  <text id="videoTitle" class="videoTitle"></text></h3>

        <div id="chart_div"></div>
        <br />
        <div align="center" class="plusMinus">- <input type="range" id="rating" value="50" style="width:100%"> +</div>

        <button onclick="printChart()">Print</button> <br />
    </div>

    <script>
        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/player_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        var videoRunning;

        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '0',
                width: '0',
                videoId: getID(),
                events: {
                    'onReady': onPlayerReady
                }
            });
        }

        function onPlayerReady(event) {
            event.target.playVideo();
            setTotalTime();
            setVideoTitle();
            drawChart();
            setInterval(updatePage, 1000);
        }

        function onPlayerStateChange(event) {
            if (event.data === 0) {
                videoRunning == true;
            }
        }

    </script>

    <script>
        function addURL() {
            tag.src = getElementById("userURL").value
        }

        function refreshIframe() {
            //document.getElementById('player').src = "https://www.youtube.com/embed/s7wmiS2mSXY";
            document.getElementById('player').src = "https://www.youtube.com/embed/" + getID();
        }

        function getID() {
            return document.getElementById("userURL").value;
        }

        function setVideoTitle() {
            var videoData = player.getVideoData();
            document.getElementById("videoTitle").innerHTML = videoData['title'];
        }

        function updateTime() {
            document.getElementById("videoTime").innerHTML = secondsToHms(player.getCurrentTime());
        }
        function setTotalTime() {
            document.getElementById("totalTime").innerHTML = secondsToHms(videoDuration());
        }
        function secondsToHms(d) {
            d = Number(d);
            var h = Math.floor(d / 3600);
            var m = Math.floor(d % 3600 / 60);
            var s = Math.floor(d % 3600 % 60);
            return ((h > 0 ? h + ":" + (m < 10 ? "0" : "") : "") + m + ":" + (s < 10 ? "0" : "") + s);
        }
        function updatePage() {
            var oldtime = document.getElementById("videoTime").innerHTML;
            updateTime();
            if (oldtime != document.getElementById("videoTime").innerHTML) {
                updateData();
            }
        }

        function videoDuration() {
            return (player.getDuration() - 1)
        }
    </script>

    <script type="text/javascript">
        function youtube_parser(url) {
            var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/;
            var match = url.match(regExp);
            return (match && match[7].length == 11) ? match[7] : false;
        }
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script>
        var chart;
        var data;
        var options;

        google.charts.load('current', { packages: ['corechart', 'line'] });

        function drawChart() {
            data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Time');
            data.addColumn('number', 'Enjoyment');

            data.addRows([
            [[0, 0, 0], 50]]);

            options = {
                hAxis: {
                    title: 'Time',
                    viewWindowMode: 'explicit',
                    viewWindow: {
                        max: [0, 0, Math.round(videoDuration())],
                    },
                    ticks: [[0, 0, Math.round(videoDuration() / 8)], [0, 0, Math.round(videoDuration() / 4)], [0, 0, Math.round(videoDuration() * (3 / 8))],
                        [0, 0, Math.round(videoDuration() / 2)], [0, 0, Math.round(videoDuration() * (5 / 8))], [0, 0, Math.round(videoDuration() * (3 / 4))],
                        [0, 0, Math.round(videoDuration() * (7 / 8))], [0, 0, Math.round(videoDuration())]],
                    format: 'mm:ss',
                    textStyle: { color: '#8c8c8c' },
                    titleTextStyle: { color: '#ff0066' },
                    gridlines: { color: '#666666' }
                },
                vAxis: {
                    title: 'Enjoyment',
                    viewWindowMode: 'explicit',
                    viewWindow: {
                        max: 100,
                    },
                    ticks: [0, 25, 50, 75, 100],
                    textStyle: { color: '#8c8c8c' },
                    titleTextStyle: { color: '#ff0066' },
                    gridlines: { color: '#666666' }
                },
                backgroundColor: 'transparent',
                //width: 800,
                //height: 400,
                legend: 'none',
                colors: ['#ff0066']
            };


            chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }

        function updateData() {
            data.addRows([[[0, 0, Math.round(player.getCurrentTime())], Number(document.getElementById("rating").value)]]);
            chart.draw(data, options);
        }

        function printChart() {
            window.location = chart.getImageURI();
        }

    </script>

</body>
</html>