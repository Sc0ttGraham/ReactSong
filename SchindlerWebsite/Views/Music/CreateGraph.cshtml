
@{
    ViewBag.Title = "CreateGraph";
}

<!DOCTYPE html>
<html>
<head>
    @Styles.Render("~/Content/rangeslider2.css")
    @Scripts.Render("~/bundles/rangeslider")

    <style>
        .timer {
            border-radius: 25px;
            padding: 5px;
            color: #ff0066;
            font-size: 18px;
            /*background-color: #660029;*/
            opacity: 0.8;
            -webkit-transition: opacity 0.5s ease-out;
            -moz-transition: opacity 0.5s ease-out;
            -ms-transition: opacity 0.5s ease-out;
            -o-transition: opacity 0.5s ease-out;
            transition: opacity 0.5s ease-out;
        }

            .timer:hover {
                opacity: 1;
            }

        .videoTitle {
            color: #8c8c8c;
        }

        .button {
            border-radius: 25px;
            padding: 5px;
            /*color: #ff0066;*/
            font-size: 18px;
            background-color: #ff0066;
            opacity: 0.8;
            -webkit-transition: opacity 0.5s ease-out;
            -moz-transition: opacity 0.5s ease-out;
            -ms-transition: opacity 0.5s ease-out;
            -o-transition: opacity 0.5s ease-out;
            transition: opacity 0.5s ease-out;
        }

            .button:hover {
                opacity: 1;
            }

        body {
            padding: 30px;
        }

        input[type=range] {
            /*removes default webkit styles*/
            -webkit-appearance: slider-vertical;
            /*fix for FF unable to apply focus style bug */
            /*required for proper track sizing in FF*/
        }

        .datatable{
            background-color: white;
            color: black;
            border: 3px solid #ff0066;
            opacity: 0.8;
            margin-right: 5px;
        }
            .datatable:hover {
                opacity: 1;
            }

        .datatable td{
            padding-right: 50px;
        }

        .printchartcontainer {
            opacity: 0.8;
        }
            .printchartcontainer:hover{
                opacity: 1;
            }

        .audiotoggle {
            color: #ff0066;
            font-size: 20px;
        }
             .audiotoggle:hover {
                color: #ff9999;
                transition: color 0.5s ease-out;
            }
        .instructions {
            color:  #666666;
            text-align: center;
        }
    </style>
</head>
<body>
    <div>
        <div hidden>
            <input id="userURL" type="text" value=@Model.URL>
            <br>
        </div>
       
        <div id="player"></div>

        <h3 style="text-align:center">
        <text class="audiotoggle" id="toggleAudio" onclick="toggleAudio()"><span class="glyphicon glyphicon-pause" aria-hidden="true"></span></text>
        <text class="timer"><text id="videoTime">0:00</text>/<text id="totalTime">0:00</text></text>  <text id="videoTitle" class="videoTitle"></text>
        </h3>
        <p class="instructions">To rate the song, use the slider to the left of the graph.</p>
        <div style="display: flex; display: -webkit-flex;">
            <div><input type="range" id="rating" value="0" data-orientation="vertical"></div>
            <div id="chart_div" style="width:100%; height:400px;"></div> <br />
        </div>

        <p class="instructions">When you are done rating the song, click on Export Data.</p>
        
        <button onclick="printChart()">Export Data</button> <br /><br />

        <p id="instructions" style="color: #666666; text-align: center;"></p>

        <div style="display: flex; display: -webkit-flex;">
            <table class="datatable" id="printdata"></table>
            <div class="printchartcontainer" id="printchart_div"></div>
        </div>


    </div>

    <script>
        var $element = $('input[type="range"]');

        $element
          .rangeslider({
              polyfill: false,
          });
    </script>

    <script>
        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/player_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        var videoRunning;

        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '0',
                width: '0',
                videoId: getID(),
                events: {
                    'onReady': onPlayerReady
                }
            });
        }

        function onPlayerReady(event) {
            event.target.playVideo();
            setTotalTime();
            setVideoTitle();
            drawChart();
            setInterval(updatePage, 1000);
        }

        function onPlayerStateChange(event) {
            if (event.data === 0) {
                videoRunning == true;
            }
        }

        function toggleAudio()
        {
            if(player.getPlayerState() == 1)
            {
                player.pauseVideo();
                document.getElementById("toggleAudio").innerHTML = "<span class=\"glyphicon glyphicon-play\" aria-hidden=\"true\">";
            }
            else if (player.getPlayerState() == 2)
            {
                player.playVideo();
                document.getElementById("toggleAudio").innerHTML = "<span class=\"glyphicon glyphicon-pause\" aria-hidden=\"true\">";
            }
        }
    </script>

    <script>
        function addURL() {
            tag.src = getElementById("userURL").value
        }

        function refreshIframe() {
            //document.getElementById('player').src = "https://www.youtube.com/embed/s7wmiS2mSXY";
            document.getElementById('player').src = "https://www.youtube.com/embed/" + getID();
        }

        function getID() {
            return document.getElementById("userURL").value;
        }

        function setVideoTitle() {
            var videoData = player.getVideoData();
            document.getElementById("videoTitle").innerHTML = videoData['title'];
        }

        function updateTime() {
            document.getElementById("videoTime").innerHTML = secondsToHms(player.getCurrentTime());
        }
        function setTotalTime() {
            document.getElementById("totalTime").innerHTML = secondsToHms(videoDuration());
        }
        function secondsToHms(d) {
            d = Number(d);
            var h = Math.floor(d / 3600);
            var m = Math.floor(d % 3600 / 60);
            var s = Math.floor(d % 3600 % 60);
            return ((h > 0 ? h + ":" + (m < 10 ? "0" : "") : "") + m + ":" + (s < 10 ? "0" : "") + s);
        }
        function updatePage() {
            var oldtime = document.getElementById("videoTime").innerHTML;
            updateTime();
            if (oldtime != document.getElementById("videoTime").innerHTML) {
                updateData();
            }
        }

        function videoDuration() {
            return (player.getDuration() - 1)
        }
        function getDate()
        {
            var currentdate = new Date();
            var datetime =  (currentdate.getMonth() + 1) + "/"
                            + currentdate.getDate() + "/"
                            + currentdate.getFullYear() + " "
                            + currentdate.getHours() + ":"
                            + currentdate.getMinutes() + ":"
                            + currentdate.getSeconds();
            return datetime;
        }

        function formatCSV(s)
        {
            var front = "<tr><td>";
            var back = "</td><td></td></tr>";
            var r = front + s;
            r = r.split("\n").join("</td></tr><tr><td>");
            r = r.split(",").join("</td><td>");
            r = r + back;
            return r;
        }
    </script>

    <script type="text/javascript">
        function youtube_parser(url) {
            var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/;
            var match = url.match(regExp);
            return (match && match[7].length == 11) ? match[7] : false;
        }
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script>
        var chart;
        var data;
        var options;

        google.charts.load('current', { packages: ['corechart', 'line'] });

        function drawChart() {
            data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Time');
            data.addColumn('number', 'Enjoyment');

            data.addRows([
            [[0, 0, 0], 0]]);

            options = {
                hAxis: {
                    title: 'Time',
                    viewWindowMode: 'explicit',
                    viewWindow: {
                        max: [0, 0, Math.round(videoDuration())],
                    },
                    ticks: [[0, 0, Math.round(videoDuration() / 8)], [0, 0, Math.round(videoDuration() / 4)], [0, 0, Math.round(videoDuration() * (3 / 8))],
                        [0, 0, Math.round(videoDuration() / 2)], [0, 0, Math.round(videoDuration() * (5 / 8))], [0, 0, Math.round(videoDuration() * (3 / 4))],
                        [0, 0, Math.round(videoDuration() * (7 / 8))], [0, 0, Math.round(videoDuration())]],
                    format: 'mm:ss',
                    textStyle: { color: '#8c8c8c' },
                    titleTextStyle: { color: '#ff0066' },
                    gridlines: { color: '#666666' }
                },
                vAxis: {
                    title: 'Enjoyment',
                    viewWindowMode: 'explicit',
                    viewWindow: {
                        max: 100,
                    },
                    ticks: [0, 25, 50, 75, 100],
                    textStyle: { color: '#8c8c8c' },
                    titleTextStyle: { color: '#ff0066' },
                    gridlines: { color: '#666666' }
                },
                backgroundColor: 'transparent',
                //width: 800,
                //height: 400,
                legend: 'none',
                colors: ['#ff0066']
            };


            chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }

        function updateData() {
            data.addRows([[[0, 0, Math.round(player.getCurrentTime())], Number(document.getElementById("rating").value)]]);
            chart.draw(data, options);
        }

        function printChart() {
            var videoData = player.getVideoData();
            var printoptions = {
                hAxis: {
                    title: 'Time',
                    viewWindowMode: 'explicit',
                    viewWindow: {
                        max: [0, 0, Math.round(videoDuration())],
                    },
                    ticks: [[0, 0, Math.round(videoDuration() / 8)], [0, 0, Math.round(videoDuration() / 4)], [0, 0, Math.round(videoDuration() * (3 / 8))],
                        [0, 0, Math.round(videoDuration() / 2)], [0, 0, Math.round(videoDuration() * (5 / 8))], [0, 0, Math.round(videoDuration() * (3 / 4))],
                        [0, 0, Math.round(videoDuration() * (7 / 8))], [0, 0, Math.round(videoDuration())]],
                    format: 'mm:ss',
                    textStyle: { color: '#8c8c8c' },
                    titleTextStyle: { color: 'black' },
                    gridlines: { color: '#666666' }
                },
                vAxis: {
                    title: 'Enjoyment',
                    viewWindowMode: 'explicit',
                    viewWindow: {
                        max: 100,
                    },
                    ticks: [0, 25, 50, 75, 100],
                    textStyle: { color: '#8c8c8c' },
                    titleTextStyle: { color: 'black' },
                    gridlines: { color: '#666666' }
                },
                backgroundColor: 'white',
                title: getDate() + '\n' + videoData['title'],
                legend: 'none',
                width: 1000,
                height: 400,
                colors: ['black']
            };

            var printchart = new google.visualization.AreaChart(document.getElementById('printchart_div'));
            printchart.draw(data, printoptions);

            document.getElementById('instructions').innerHTML = '<hr />Feel free to copy the data in the table below, or save the image of the chart you\'ve made! <br /> Right click on the graph and choose “Save image as…”';

            document.getElementById('printchart_div').innerHTML = '<img style="border: 3px solid #ff0066; width: 80%" src="' + printchart.getImageURI() + '">';

            document.getElementById('printdata').innerHTML = formatCSV(google.visualization.dataTableToCsv(data));

        }

    </script>

</body>
</html>