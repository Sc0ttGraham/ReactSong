
@{
    ViewBag.Title = "React";
}

<h2>React</h2>

<form action="demo_form.asp">
    Youtube URL: <input type="text" name="LastName">
    <br />
    <input type="submit" value="Submit">
    <br />
</form>
<br />

<iframe id="ytplayer" type="text/html" width="150" height="50"
        src="https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=http://example.com&showinfo=0&version=3"
        frameborder="0">
</iframe>

<br />

Video Length: <p id="peep">jhjhjh</p>

<button onclick="updateTime()">Try it</button>

<script>
    ytplayer = document.getElementById("ytplayer");

    function updateTime() {
        var time = ytplayer.getCurrentTime();
        document.getElementById("peep").innerHTML = "dadi";
    }
</script>


<br />

<br />

 <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
<div id="player"></div>

<script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: 'M7lc1UVf-VE',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }

      function updateTime() {
          var time = player.getCurrentTime();
          document.getElementById("peep").innerHTML = time;
      }
</script>
